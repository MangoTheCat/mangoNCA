% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AUCInfObs.R
\name{AUCInfObs}
\alias{AUCInfObs}
\title{Calculate Area Under Curve or Moment Curve To "Infinity" (Observed)}
\usage{
AUCInfObs(Conc, Time, numPoints = NULL, lambdaZStats = NULL,
  calculation = c("standard", "moment"), minPoints = 3, addT0 = FALSE,
  Safe = TRUE, inter = "Linear")
}
\arguments{
\item{Conc}{A numeric vector of concentration values}

\item{Time}{A numeric vector of time values, parallel to \code{Conc} and of the same length.  These should be sorted
in ascending order.}

\item{numPoints}{Number of points to use for the lambdaz calculation, counted from the end of the concentration/time vectors.}

\item{lambdaZStats}{if not \code{NULL}, a list with 9 elements (see details). Must be provided if numPoints is not.}

\item{calculation}{Must be either the string "standard" or "moment".  If the former, calculates the standard area under
the curve.  For the latter, it will calculate the area under the moment curve}

\item{minPoints}{Minimum number of points to use for the Lambdaz calculation(s), 3 by default. Single positive integer.}

\item{addT0}{Single logical value declaring whether T0 should be added if missing provided execution is Safe (default \code{TRUE}).}

\item{Safe}{Single logical value declaring whether to perform data checks and data cleaning (default is \code{TRUE}).}

\item{inter}{Single character stating whether the interpolation method used is \code{"Linear"} (default) or \code{"Linear Log"}}
}
\value{
A numeric vector with a single element holding the area under the concentration/time curve until "infinity".
}
\description{
Area under the Concentration Time Curve from T = 0 to T = Inf using extrapolation from Observed Clast
}
\details{
AUCInfObs calculates the area under a time/concentration (or first moment) curve from the first point up to  
"infinity" using the linear trapezium rule.  This is performed by calculating the area under the concentration-time
curve until the last measurable concentration (see \code{\link{AUCLast}}), and then adding an extrapolated 
AUC which is the area bounded by the exponential decay curve with rate constant -lambdaz from observed Clast.  
Analogous calculations for AUMC are used if appropriate. \cr
There are two methods for calculating AUC and AUMC.
Lambdaz stats can be calculated within the function. In this case, numPoints should be provided.
numPoints must be a single integer greater than minPonts (which should be at least 2) and less than or equal to the length of \code{Time} and \code{Conc}.
numPoints is NULL by default. Must be provided if lambdaZStats is not.
The lambdaz statistics may be provided directly to this function; it should be a length 9 numeric vector with named elements:
\enumerate{
     \item Lambdaz
     \item intercept
     \item r2
     \item adjr2
     \item rhoXY
     \item tPhaseHalfLife
     \item LambdazLower
     \item LambdazUpper
     \item numPoints
}
Use \code{unlist} to pass \code{lambdaZStatistics} output to this function.
}
\note{
The following error checks / processing will be performed:
 \enumerate{
     \item all error checks for \code{AUCLast} apply
     \item If any relevant lambda z calculations are NA, NA will be returned
     \item An exception will be generated if numPoints is not a single integer numeric between 2 and  \code{length(Conc)} (inclusive)
 }
The algorithm for calculating the observed AUC is as follows:
\deqn{AUCPredInf = AUCLast + Clast / \lambda_z}   
For the observed AUMC, the calculation is
\deqn{AUMCPredInf = AUMCLast + Clast * tlast / \lambda_z + Clast / \lambda_z^2}
Here \eqn{c_0} is the exponential of the intercept term from the lambda z regression, and \eqn{t_{upper}} is the
last time point used in that regression
}
\examples{
     Theoph1 <- subset(Theoph, Subject == 1)
     AUCInfObs(Conc = Theoph1$conc, Time = Theoph1$Time, numPoints = 4, calculation = "standard")
}
\seealso{
\code{\link{lambdaZStatistics}}, \code{\link{AUCLast}}
}
\author{
Mango Solutions
}
\keyword{math}
